global
  maxconn 4096
  log stdout format raw local0

defaults
  log     global
  mode    tcp
  option  tcplog
  timeout connect 5s
  timeout client  5m
  timeout server  5m

# --- Prometheus metrics endpoint ---
frontend stats
    bind *:8404
    mode http
    http-request use-service prometheus-exporter if { path /metrics }

# 5000 -> leader only (read/write)
frontend psql_rw
  bind *:5000
  default_backend patroni_leader

# 5001 -> replicas only (read-only)
frontend psql_ro
  bind *:5001
  default_backend patroni_replicas

# ── Backends ──────────────────────────────────────────────────────────
# We keep Postgres traffic in TCP mode (5432),
# but health-check against Patroni REST API (8008) to learn roles.
# Spilo exposes Patroni on 8008 by default.

backend patroni_leader
  balance roundrobin
  option httpchk GET /master
  http-check expect status 200
  default-server inter 2s fall 3 rise 2 on-marked-down shutdown-sessions
  server patroni1 patroni1:5432 check port 8008
  server patroni2 patroni2:5432 check port 8008
  server patroni3 patroni3:5432 check port 8008

backend patroni_replicas
  balance roundrobin
  option httpchk GET /replica
  http-check expect status 200
  default-server inter 2s fall 3 rise 2 on-marked-down shutdown-sessions
  server patroni1 patroni1:5432 check port 8008
  server patroni2 patroni2:5432 check port 8008
  server patroni3 patroni3:5432 check port 8008
